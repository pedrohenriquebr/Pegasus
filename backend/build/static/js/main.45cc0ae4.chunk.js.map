{"version":3,"sources":["app/pages/components/buttons/index.js","app/services/api.js","app/pages/components/formcontrols/AccountSelect/index.js","app/pages/components/Grid/index.js","app/pages/Transactions/index.js","app/pages/components/MainMenu/index.js","app/pages/components/TranslateMenu/index.js","app/pages/components/HomeAppBar/index.js","App.js","i18n.js","index.js"],"names":["RefreshButton","props","Button","onClick","color","AddButton","variant","EditButton","DeleteButton","axios","create","baseURL","headers","auth","username","process","password","AccountSelect","onAccountChange","useState","account","setAccount","accounts","setAccounts","t","useTranslation","useEffect","api","get","then","d","data","map","text","name","value","id","Form","Select","aria-label","onChange","event","target","defaultValue","index","Grid","accountId","setData","isLoading","setLoading","post","headerSortingClasses","column","sortOrder","isLastSorting","colIndex","headerStyle","colum","width","textAlign","NoDataIndication","Spinner","animation","columns","sort","filter","numberFilter","type","dataField","textFilter","dateFilter","pagination","paginationFactory","custom","totalSize","length","paginationProps","paginationTableProps","className","keyField","striped","hover","condensed","tabIndexCell","noDataIndication","filterFactory","TransactionPage","setAccountId","Container","expand","Row","Col","md","span","offset","style","display","justifyContent","MainMenu","Dropdown","Toggle","Menu","Item","href","lngs","en","nativeName","ptBr","TranslateMenu","i18n","Object","keys","lng","ev","changeLanguage","HomeAppBar","Navbar","bg","Brand","App","path","element","use","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","resources","translation","appbar","appmenu","categories","import","export","settings","transactions","title","add","edit","delete","labels","category","amount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45cc0ae4.chunk.js","sourcesContent":["import { BsArrowClockwise,BsPlusCircleFill, BsFillPencilFill,BsFillTrashFill } from \"react-icons/bs\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport const RefreshButton = (props) => {\r\n    return (\r\n        <Button onClick={props.onClick} color=\"green\" {...props}>\r\n            <BsArrowClockwise />\r\n        </Button>\r\n    );\r\n};\r\n\r\n\r\nexport const AddButton = (props) => {\r\n    return (\r\n        <Button\r\n            onClick={props.onClick}\r\n            variant=\"success\" {...props}\r\n                    >\r\n            <BsPlusCircleFill />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const EditButton = (props) => {\r\n    return (\r\n        <Button\r\n            onClick={props.onClick}\r\n            variant=\"success\" {...props}\r\n        >\r\n            <BsFillPencilFill />\r\n        </Button>\r\n    );\r\n};\r\n\r\n\r\nexport const DeleteButton = (props) => {\r\n    return (\r\n        <Button\r\n            onClick={props.onClick}\r\n            variant=\"danger\" {...props}\r\n        >\r\n            <BsFillTrashFill />\r\n        </Button>\r\n    );\r\n};","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n   \r\n    baseURL: '/api',\r\n    headers: {\r\n        'Accept': '*/*',\r\n        'Content-Type': 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    },\r\n    auth: {\r\n        username: process.env.REACT_APP_USER,\r\n        password: process.env.REACT_APP_PASSWORD\r\n    },\r\n});\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport api from '../../../../services/api';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nexport default function AccountSelect({ onAccountChange }) {\r\n    const [account, setAccount] = useState('1');\r\n    const [accounts, setAccounts] = useState([]);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        api.get('/accounts/autocomplete',).then(d => {\r\n            setAccounts(d.data.data.map(d => ({ text: d.name, value: d.id })));\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (event) => {\r\n        setAccount(event.target.value);\r\n        if (onAccountChange) onAccountChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        accounts == [] ? <div> Loading ...</div>\r\n            :\r\n            <Form.Select aria-label=\"Default select example\" onChange={handleChange} defaultValue={account}>\r\n                <option value=\"0\">{t('labels.account')}</option>\r\n                {accounts.map((account, index) =>\r\n                    <option key={index} value={account.value}>{account.text}</option>)}\r\n            </Form.Select>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter, numberFilter, dateFilter, } from 'react-bootstrap-table2-filter';\r\nimport api from '../../../services/api';\r\nimport './index.css';\r\n\r\n\r\n\r\n\r\nexport default function Grid({ accountId }) {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setData([])\r\n    setLoading(true);\r\n    api.post('/transactions/get-all', {\r\n      \"id_account\": accountId,\r\n      \"limit\": -1\r\n    }).then(d => {\r\n      setData(d.data.data)\r\n      setLoading(false)\r\n    })\r\n  }, [accountId])\r\n\r\n\r\n  const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\r\n    sortOrder === 'asc' ? 'demo-sorting-asc' : 'demo-sorting-desc'\r\n  );\r\n  const headerStyle = (colum, colIndex) => {\r\n    return { width: '200px', textAlign: 'center' };\r\n  }\r\n\r\n  const NoDataIndication = () => {\r\n    return isLoading ? <Spinner animation=\"border\" variant=\"primary\" /> : <p> Empty </p>\r\n  }\r\n\r\n  const columns = [\r\n    { sort: true, headerStyle: headerStyle, filter: numberFilter(), headerSortingClasses, type: \"number\", dataField: 'id', text: 'ID_Transaction', },\r\n    { sort: true, headerStyle: headerStyle, headerSortingClasses, type: \"bool\", dataField: 'is_imported', text: 'IC_Imported', },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'account', text: 'Account', },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'account_destination', text: 'Account Destination', },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'type', text: 'CD_Type', type: 'string', width: 100 },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'category', text: 'Category', },\r\n    { sort: true, headerStyle: headerStyle, filter: dateFilter(), headerSortingClasses, type: \"date\", dataField: 'transaction_date', text: 'DT_TransactionDate', },\r\n    { sort: true, headerStyle: headerStyle, filter: dateFilter(), headerSortingClasses, type: \"date\", dataField: 'registration_date', text: 'DT_RegistrationDate', },\r\n    { sort: true, headerStyle: headerStyle, filter: numberFilter(), headerSortingClasses, type: \"number\", dataField: 'amount', text: 'Amount', },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'description', text: 'DS_Description', },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'attachment_details', text: 'DS_AttachmentDetails', },\r\n    { sort: true, headerStyle: headerStyle, filter: textFilter(), headerSortingClasses, type: \"string\", dataField: 'attachment_path', text: 'AttachmentPath', },\r\n    { sort: true, headerStyle: headerStyle, filter: dateFilter(), headerSortingClasses, type: \"date\", dataField: 'imported_date', text: 'ImportedDate', },\r\n    { sort: true, headerStyle: headerStyle, filter: numberFilter(), headerSortingClasses, type: \"number\", dataField: 'balance', text: 'NR_Balance', },\r\n  ];\r\n\r\n  return (\r\n\r\n    <PaginationProvider\r\n      pagination={paginationFactory({ custom: true, totalSize: data.length })}\r\n    >\r\n      {\r\n        ({\r\n          paginationProps,\r\n          paginationTableProps\r\n        }) => (\r\n          <div>\r\n            <PaginationListStandalone\r\n              {...paginationProps}\r\n            />\r\n            <div className=\"table-container\">\r\n              <BootstrapTable\r\n                keyField=\"id\"\r\n                striped\r\n                hover\r\n                condensed\r\n                tabIndexCell\r\n                pagination={paginationFactory()}\r\n                data={data}\r\n                columns={columns}\r\n                noDataIndication={() => <NoDataIndication />}\r\n                {...paginationTableProps}\r\n                filter={filterFactory()}\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </PaginationProvider >\r\n  )\r\n\r\n\r\n}","import { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AddButton, DeleteButton, EditButton, RefreshButton } from '../components/buttons';\r\nimport AccountSelect from '../components/formcontrols/AccountSelect';\r\nimport Grid from '../components/Grid';\r\n\r\n\r\nexport default function TransactionPage() {\r\n    const { t } = useTranslation();\r\n    const [accountId, setAccountId] = useState(1);\r\n    return (\r\n        <Container expand=\"lg\">\r\n            <Row>\r\n                <Col>\r\n                    <h1>{t('transactions.title')}</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={2}>\r\n                    <AccountSelect onAccountChange={d => setAccountId(d)} />\r\n                </Col>\r\n                <Col md={{ span: 3, offset: 10 }} style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                    <RefreshButton  onClick={() => setAccountId(accountId)} />\r\n                    <AddButton />\r\n                    <EditButton />\r\n                    <DeleteButton />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Grid accountId={accountId} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\nexport default function MainMenu() {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                <AiOutlineMenu />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item href=\"#\">{t('appbar.appmenu.accounts')}</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\">{t('appbar.appmenu.categories')}</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\">{t('appbar.appmenu.import')}</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\">{t('appbar.appmenu.export')}</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\">{t('appbar.appmenu.settings')}</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n","import { useTranslation } from 'react-i18next';\r\nimport {BsTranslate} from 'react-icons/bs'; \r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst lngs = {\r\n    en: { nativeName: 'English' },\r\n    ptBr: { nativeName: 'Português' }\r\n};\r\n\r\n\r\nexport default function TranslateMenu() {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const changeLanguage = (lng) => {\r\n        i18n.changeLanguage(lng)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle color=\"blue\" id=\"dropdown-basic\">\r\n                <BsTranslate />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n            {Object.keys(lngs).map((lng) => (\r\n            <Dropdown.Item key={lng} onClick={(ev) => changeLanguage(lng)}>\r\n                    {lngs[lng].nativeName}\r\n            </Dropdown.Item>))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\n","import Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\n\r\n\r\nimport MainMenu from '../MainMenu';\r\nimport TranslateMenu from '../TranslateMenu';\r\nexport const HomeAppBar = () => {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container>\r\n                <MainMenu />\r\n                <Navbar.Brand href=\"#home\">Pegasus</Navbar.Brand>\r\n                <TranslateMenu/>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","\r\nimport TransactionPage  from './app/pages/Transactions';\r\nimport { HomeAppBar } from './app/pages/components/HomeAppBar';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n        <HomeAppBar></HomeAppBar>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/transactions\" element={<TransactionPage />} />\r\n            <Route path=\"/\" element={<TransactionPage />} />\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  .init({\r\n    debug: true,\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false\r\n    },\r\n    resources: {\r\n      en: {\r\n        translation: {\r\n          appbar: {\r\n            appmenu: {\r\n              accounts: 'Accounts',\r\n              categories: 'Categories',\r\n              import: 'Import',\r\n              export: 'Export',\r\n              settings: 'Settings',\r\n            }\r\n          },\r\n          transactions: {\r\n            title: 'Transactions',\r\n            add: 'Add',\r\n            edit: 'Edit',\r\n            delete: 'Delete',\r\n          },\r\n          labels: {\r\n            account: 'Account',\r\n            category: 'Category',\r\n            amount: 'Amount',\r\n          }\r\n        },\r\n      },\r\n      ptBr: {\r\n        translation: {\r\n          appbar: {\r\n            appmenu: {\r\n              accounts: 'Contas',\r\n              categories: 'Categorias',\r\n              import: 'Importar',\r\n              export: 'Exportar',\r\n              settings: 'Configurações',\r\n            }\r\n          },\r\n          transactions: {\r\n            title: 'Transações',\r\n            add: 'Adicionar',\r\n            edit: 'Editar',\r\n            delete: 'Excluir',\r\n          },\r\n          labels: {\r\n            account: 'Conta',\r\n            category: 'Categoria',\r\n            amount: 'Quantia',\r\n        },\r\n\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n\r\nexport default i18n;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './i18n';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}